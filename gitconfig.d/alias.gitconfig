################################################################################
# Helpful git aliases
# Author: Jared Bold
################################################################################
[alias]
  # Update and initialize submodules
  su = "submodule update --init"

  # Show the top directory of the git repo
  top = "rev-parse --show-toplevel"

  # Delete local branches that have been removed from the remote
  clean-branches = "!git fetch -p && for branch in $(git branch -vv | grep ': gone]' | gawk '{print $1}'); do git branch -d $branch; done"
  clean-branches-D = "!git fetch -p && for branch in $(git branch -vv | grep ': gone]' | gawk '{print $1}'); do git branch -D $branch; done"

  clean-branch = "!f() { git branch -d $1 && git push origin --delete $1}; }; f"
  clean-branch-D = "!f() { git branch -D $1 && git push origin --delete $1}; }; f"

  # Show the closest tag that matches the provided pattern
  last-tag = "!f() { git describe --abbrev=0 --tags --match $@; }; f"

  # Rebase interactive
  rbi = "rebase -i"

  # rebase against merge-base of current branch and remote
  rbh = "!f() { git rebase -i $(git merge-base HEAD @{u}); }; f"

  # Print all local branches, ordered by last commit, with additional information
  ls-branches = "!git for-each-ref \
    --sort=-committerdate refs/heads/\
    --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'"

  # Show commits I authored
  ml = "!me=$(git config --get user.name); git log --author \"$me\""

  # detach and delete the current branch
  dd = "!f() { git checkout --detach && git branch -D @{-1}; }; f"

